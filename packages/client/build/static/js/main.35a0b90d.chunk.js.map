{"version":3,"sources":["config/keycodes.ts","components/web/button/button.tsx","components/web/card/card.tsx","components/web/container/container.tsx","components/web/error/error.tsx","components/web/input/input.tsx","contexts/app.context.ts","components/pages/home/home.tsx","config/servers.ts","components/chat/chat.tsx","config/routes.ts","components/pages/play/play.tsx","app.tsx","index.tsx","components/pages/home/home.module.scss","../../src/index.ts","components/web/button/button.module.scss","components/web/card/card.module.scss","components/web/container/container.module.scss","components/web/error/error.module.scss","components/web/input/input.module.scss","components/chat/chat.module.scss","components/pages/play/play.module.scss"],"names":["Key","Button","props","className","styles","button","onClick","children","Card","card","Container","cssWidth","width","container","style","Error","error","Input","input","placeholder","value","onChange","e","target","AppContext","React","createContext","player","name","setPlayerName","console","warn","Home","history","useHistory","appContext","useContext","useState","localName","setLocalName","setError","background","String","length","push","routes","play","path","servers","url","Chat","ChatRoom","General","currentRoom","newMessage","setNewMessage","inputEl","useRef","useChat","joinChat","messages","sendMessage","useEffect","playerName","handleKeyUp","useCallback","key","Enter","document","activeElement","current","blur","focus","window","addEventListener","removeEventListener","chat","map","message","index","ref","home","label","component","exact","to","isHidden","visibleRoutes","Object","values","filter","App","context","Provider","route","i","activeClassName","render","createElement","ReactDOM","getElementById","module","exports"],"mappings":"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","file":"static/js/main.35a0b90d.chunk.js","sourcesContent":["export enum Key {\n  Enter = 'Enter',\n}\n","import React, { ReactNode } from 'react';\nimport styles from './button.module.scss';\n\ntype ButtonProps = {\n  children: ReactNode;\n  onClick: () => void;\n};\n\nconst Button: React.FC<ButtonProps> = (props: ButtonProps) => {\n  return (\n    <button className={styles.button} onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { ReactNode } from 'react';\nimport styles from './card.module.scss';\n\ntype CardProps = {\n  children: ReactNode;\n};\n\nconst Card: React.FC<CardProps> = (props: CardProps) => {\n  return <div className={styles.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import React, { ReactNode } from 'react';\nimport styles from './container.module.scss';\n\ntype ContainerProps = {\n  width?: number;\n  children: ReactNode;\n  className?: string;\n};\n\nconst Container: React.FC<ContainerProps> = (props: ContainerProps) => {\n  const cssWidth = `calc(${props.width || 1}*100%`;\n\n  return (\n    <div className={`${styles.container} ${props.className}`} style={{ width: cssWidth }}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Container;\n","import Container from '../container/container';\nimport React from 'react';\nimport styles from './error.module.scss';\n\ntype ErrorProps = {\n  error: string;\n};\n\nconst Error: React.FC<ErrorProps> = (props: ErrorProps) => {\n  if (!props.error) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <p className={styles.error}>{props.error}</p>\n    </Container>\n  );\n};\n\nexport default Error;\n","import React from 'react';\nimport styles from './input.module.scss';\n\ntype InputProps = {\n  value: string;\n  placeholder?: string;\n  onChange: (value: string) => void;\n};\n\nconst Input: React.FC<InputProps> = (props: InputProps) => {\n  return (\n    <input\n      className={styles.input}\n      placeholder={props.placeholder}\n      value={props.value}\n      onChange={(e): void => props.onChange(e.target.value)}\n    />\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport { Player } from '@reapers/game-client';\n\ntype AppContextType = {\n  player: Player;\n  setPlayerName: (name: string) => void;\n};\n\nexport const AppContext = React.createContext<AppContextType>({\n  player: {\n    name: '',\n  },\n  setPlayerName: (name: string) => console.warn('setPlayerName is not set'),\n});\n","import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Card, Container, Error, Input } from '../../web';\nimport { routes } from '../../../config/routes';\nimport { AppContext } from '../../../contexts/app.context';\nimport styles from './home.module.scss';\n\nconst Home: React.FC = () => {\n  const history = useHistory();\n  const appContext = useContext(AppContext);\n  const [localName, setLocalName] = useState(appContext.player.name);\n  const [error, setError] = useState('');\n\n  const handleNameChange = (value: string): void => {\n    setLocalName(value);\n    setError('');\n  };\n\n  const handleSubmit = (): void => {\n    if (String(localName).length > 0) {\n      appContext.setPlayerName(localName);\n      history.push(routes.play.path);\n    } else {\n      setError('A name is required');\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.background} />\n      <Container width={1 / 3}>\n        <Card>\n          <Input placeholder=\"Name\" value={localName} onChange={handleNameChange} />\n          <Error error={error} />\n          <Button onClick={handleSubmit}>Play</Button>\n        </Card>\n      </Container>\n    </div>\n  );\n};\n\nexport default Home;\n","export const servers = {\n  chat: {\n    url: 'ws://localhost:4002',\n  },\n};\n","import { ChatRoom, useChat } from '@reapers/chat-client';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Key } from '../../config/keycodes';\nimport { servers } from '../../config/servers';\nimport styles from './chat.module.scss';\n\ntype ChatProps = {\n  playerName: string;\n};\n\nconst Chat: React.FC<ChatProps> = (props: ChatProps) => {\n  const [currentRoom, setCurrentRoom] = useState<ChatRoom>(ChatRoom.General);\n  const [newMessage, setNewMessage] = useState('');\n  const inputEl = useRef<HTMLInputElement>(null);\n  const { joinChat, messages, sendMessage } = useChat(servers.chat.url);\n\n  useEffect((): void => {\n    joinChat(props.playerName);\n  }, [joinChat, props.playerName]);\n\n  const handleKeyUp = useCallback(\n    (e: KeyboardEvent): void => {\n      if (e.key === Key.Enter) {\n        if (document.activeElement === inputEl.current) {\n          if (newMessage.length) {\n            sendMessage(currentRoom, newMessage);\n            setNewMessage('');\n          } else {\n            inputEl.current?.blur();\n          }\n        } else {\n          inputEl.current?.focus();\n        }\n      }\n    },\n    [newMessage, sendMessage, currentRoom],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyUp);\n\n    return (): void => {\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [handleKeyUp]);\n\n  return (\n    <div className={styles.chat}>\n      {messages.map((message, index) => (\n        <p key={index}>{message}</p>\n      ))}\n      <input\n        ref={inputEl}\n        value={newMessage}\n        onChange={(e): void => setNewMessage(e.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default Chat;\n","import React from 'react';\nimport Home from '../components/pages/home/home';\nimport Play from '../components/pages/play/play';\n\ntype Route = 'home' | 'play';\n\ntype AppRouteProps = {\n  path: string;\n  label: string;\n  component: React.FC;\n  exact?: boolean;\n  isHidden?: boolean;\n};\n\nexport const routes: Record<Route, AppRouteProps> = {\n  home: {\n    path: '/',\n    label: 'Home',\n    component: Home,\n    exact: true,\n  },\n\n  play: {\n    path: '/play',\n    label: 'Play',\n    component: Play,\n    exact: true,\n    isHidden: true,\n  },\n};\n\nexport const visibleRoutes = Object.values(routes).filter(({ isHidden }) => !isHidden);\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { AppContext } from '../../../contexts/app.context';\nimport { routes } from '../../../config/routes';\nimport Chat from '../../chat/chat';\nimport styles from './play.module.scss';\n\nconst Play: React.FC = () => {\n  const appContext = useContext(AppContext);\n\n  if (!String(appContext.player.name).length) {\n    return <Redirect to={routes.home.path} />;\n  }\n\n  return (\n    <div className={styles.play}>\n      <Chat playerName={appContext.player.name} />\n    </div>\n  );\n};\n\nexport default Play;\n","import React, { useContext, useState } from 'react';\nimport { BrowserRouter as Router, Switch, NavLink, Route, Redirect } from 'react-router-dom';\nimport { routes, visibleRoutes } from './config/routes';\nimport { AppContext } from './contexts/app.context';\n\nconst App: React.FC = () => {\n  const context = useContext(AppContext);\n  const [playerName, setPlayerName] = useState(context.player.name);\n\n  return (\n    <AppContext.Provider\n      value={{\n        ...context,\n        player: {\n          name: playerName,\n        },\n        setPlayerName,\n      }}\n    >\n      <Router>\n        <div className=\"App\">\n          <div className=\"app-main-nav\">\n            {visibleRoutes.map((route, i) => (\n              <NavLink\n                key={i}\n                to={route.path}\n                exact={route.exact}\n                activeClassName=\"is-active\"\n                className=\"menu-item\"\n              >\n                {route.label}\n              </NavLink>\n            ))}\n          </div>\n\n          <div className=\"page-container\">\n            <Switch>\n              {Object.values(routes).map((route, i) => (\n                <Route\n                  key={i}\n                  path={route.path}\n                  exact={route.exact}\n                  render={(props): React.ReactNode => {\n                    return React.createElement(route.component, {\n                      ...props,\n                      key: i,\n                    });\n                  }}\n                />\n              ))}\n              <Route path=\"*\">\n                <Redirect to={routes.home.path} />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/global.scss';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__2nOOD\",\"background\":\"home_background__1TAs5\"};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChatRoom = exports.ChatEvent = void 0;\nvar MessageEvent;\n(function (MessageEvent) {\n    MessageEvent[\"Created\"] = \"MessageEvent.Created\";\n})(MessageEvent || (MessageEvent = {}));\nvar MemberEvent;\n(function (MemberEvent) {\n    MemberEvent[\"Created\"] = \"MemberEvent.Created\";\n})(MemberEvent || (MemberEvent = {}));\nconst ChatEvent = {\n    Message: MessageEvent,\n    Member: MemberEvent,\n};\nexports.ChatEvent = ChatEvent;\nvar ChatRoom;\n(function (ChatRoom) {\n    ChatRoom[\"General\"] = \"general\";\n    ChatRoom[\"Trading\"] = \"trading\";\n})(ChatRoom || (ChatRoom = {}));\nexports.ChatRoom = ChatRoom;\n//# sourceMappingURL=index.js.map","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__EbKHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__1ygZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3zG2B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"error_error__3Wkv1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__2kHed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"chat_chat__3k4Sn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"play\":\"play_play__k6vWY\"};"],"sourceRoot":""}